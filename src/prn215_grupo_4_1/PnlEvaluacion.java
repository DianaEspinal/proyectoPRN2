/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author yanis
 */

    package prn215_grupo_4_1;
    import java.awt.Color;
    import javax.swing.*;
    import Clases.Colegio.*;
    import funciones.*;
    import java.awt.Component;
    import java.awt.Font;
    import java.sql.*;
    import javax.swing.table.DefaultTableModel;
    import java.sql.PreparedStatement; 

    import javax.swing.JOptionPane;
    import Clases.Colegio.Evaluacion;
    import java.awt.Window;
    import java.awt.event.KeyEvent;
    import javax.swing.SwingUtilities;
    import javax.swing.table.DefaultTableModel;


    public class PnlEvaluacion extends javax.swing.JPanel {
    /* Declaracion de variables */
    Conexion con = new Conexion();
    Connection cn;
    Statement st;
    ResultSet rs;
    DefaultTableModel modelo;
    String idEvaluacion;
    DefaultTableModel model = new DefaultTableModel();
    // Se hace llamado de el controlador y las funciones SQL
    Evaluacion controlador_evaluacion = new Evaluacion();
    funciones_evaluacion funciones = new funciones_evaluacion();

    /**
     * Creates new form PnlEvaluacion
     */
    public PnlEvaluacion() {
        initComponents();
        mostrarEvaluaciones();
        //Se llenan los comboBoxes con los datos de las otras tablas - llaves foraneas
        cmbDocente.setModel(funciones.llenarDocentes());
        txtPorcentaje.setEnabled(false);
        txtPorcentaje.setText("25.00");
        tbEvaluaciones.getTableHeader().setOpaque(false);
        tbEvaluaciones.getTableHeader().setBackground(new Color(183, 35, 95));
        tbEvaluaciones.getTableHeader().setForeground(Color.WHITE);
        tbEvaluaciones.getTableHeader().setFont(new Font ("Dialog", Font.BOLD, 15));
        tbEvaluaciones.setFont(new Font ("Dialog", Font.PLAIN, 12));
        btnActualizar.setEnabled(false);
        btnEliminar.setEnabled(false);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbEvaluaciones = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        txtNumeroEvaluacion = new javax.swing.JTextField();
        lblTelefonoEstudiante1 = new javax.swing.JLabel();
        cmbDocente = new javax.swing.JComboBox<>();
        lblCodigoEstudiante1 = new javax.swing.JLabel();
        txtPorcentaje = new javax.swing.JTextField();
        lblCorreoEstu1 = new javax.swing.JLabel();
        lblNombresEstudiante1 = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        btnAgregar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        tbEvaluaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número de evaluación", "Ponderación", "Nota", "Docente", "Materia", "Descripción"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbEvaluaciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbEvaluacionesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbEvaluaciones);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos de Evaluación", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(204, 204, 204))); // NOI18N

        lblTelefonoEstudiante1.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        lblTelefonoEstudiante1.setText("Descripción:");

        cmbDocente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblCodigoEstudiante1.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        lblCodigoEstudiante1.setText("Docente de la evaluación: ");

        lblCorreoEstu1.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        lblCorreoEstu1.setText("Porcentaje evaluación:");

        lblNombresEstudiante1.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        lblNombresEstudiante1.setText("Número de evaluación:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblCorreoEstu1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPorcentaje))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblCodigoEstudiante1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbDocente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblNombresEstudiante1)
                            .addComponent(lblTelefonoEstudiante1))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNumeroEvaluacion, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCodigoEstudiante1)
                    .addComponent(cmbDocente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblTelefonoEstudiante1)
                        .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNombresEstudiante1)
                            .addComponent(txtNumeroEvaluacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCorreoEstu1)
                    .addComponent(txtPorcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Funciones"));

        btnAgregar.setBackground(new java.awt.Color(255, 196, 0));
        btnAgregar.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btnAgregar.setForeground(new java.awt.Color(0, 0, 122));
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnActualizar.setBackground(new java.awt.Color(255, 196, 0));
        btnActualizar.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btnActualizar.setForeground(new java.awt.Color(0, 0, 122));
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(255, 196, 0));
        btnEliminar.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(0, 0, 122));
        btnEliminar.setText("Eliminar");
        btnEliminar.setToolTipText("");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tbEvaluacionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbEvaluacionesMouseClicked
        
        btnAgregar.setEnabled(false);
        btnActualizar.setEnabled(true);
        btnEliminar.setEnabled(true);
        
        PreparedStatement ps = null;
        ResultSet rs = null;
        
        try {
            Conexion con = new Conexion();
            Connection conn = con.conectar();
            
            int fila = tbEvaluaciones.getSelectedRow();
            String idEvaluacion = tbEvaluaciones.getValueAt(fila, 0).toString();
            
            ps = conn.prepareStatement("SELECT evaluaciones.idEvaluacion, docentes.idDocente, CONCAT(personas.nombres, ' ', personas.apellidos) AS nombrecompleto, evaluaciones.numeroEvaluacion, evaluaciones.descripcion, evaluaciones.porcentajeEvaluacion\n" +
                                        "FROM evaluacion evaluaciones\n" +
                                        "INNER JOIN docente docentes ON evaluaciones.idDocente = docentes.idDocente\n" +
                                        "INNER JOIN persona personas ON docentes.idDocente = personas.idPersona\n" +
                                        "WHERE evaluaciones.idEvaluacion = ?;");
            ps.setString(1, idEvaluacion);
            rs = ps.executeQuery();
            
            while (rs.next()) 
            {
                txtDescripcion.setText(rs.getString("descripcion"));
                txtNumeroEvaluacion.setText(rs.getString("numeroEvaluacion"));
                cmbDocente.setSelectedItem(rs.getString("nombrecompleto"));
                
            }
        } 
        catch (Exception e) 
        {
              JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_tbEvaluacionesMouseClicked

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        agregarEvaluacion();
        mostrarEvaluaciones();
        limpiarCampos();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        actualizarEvaluacion();
        mostrarEvaluaciones();
        limpiarCampos();
        btnActualizar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnAgregar.setEnabled(true);
        //cmbDocente.setEnabled(true);
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        eliminarEvaluacion();
        mostrarEvaluaciones();
        limpiarCampos();
        btnActualizar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnAgregar.setEnabled(true);
        //cmbDocente.setEnabled(true);
    }//GEN-LAST:event_btnEliminarActionPerformed
    
    /* Creacion de las diferentes funciones para mandar los datos capturados de los textboxes al controlador y ser mandados a las funciones SQL */
    void mostrarEvaluaciones()
    {
               
        try 
        {
            DefaultTableModel modelo = new DefaultTableModel();
            tbEvaluaciones.setModel(modelo);
            
            PreparedStatement ps = null;
            ResultSet rs = null;
            Conexion conn = new Conexion();
            Connection con = conn.conectar();
            
            String sql = "SELECT evaluaciones.idEvaluacion, docentes.idDocente, CONCAT(personas.nombres, ' ', personas.apellidos) AS nombrecompleto, evaluaciones.numeroEvaluacion, evaluaciones.descripcion, evaluaciones.porcentajeEvaluacion\n" +
                        "FROM evaluacion evaluaciones\n" +
                        "INNER JOIN docente docentes ON evaluaciones.idDocente = docentes.idDocente\n" +
                        "INNER JOIN persona personas ON docentes.idDocente = personas.idPersona;"; 
            
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            ResultSetMetaData rsMd = rs.getMetaData();
            int cantidadColumnas = rsMd.getColumnCount();
            
            modelo.addColumn("Codigo evaluacion");
            modelo.addColumn("Codigo Docente");
            modelo.addColumn("Nombre del docente");
            modelo.addColumn("Número de evaluación");
            modelo.addColumn("Descripcion");
            modelo.addColumn("Porcentaje Evaluacion");
            
            while (rs.next()) 
            {
                Object[] filas = new Object[cantidadColumnas];
                
                for (int i = 0; i < cantidadColumnas; i++) 
                {
                    filas[i] = rs.getObject(i + 1);
                }
                
                modelo.addRow(filas);
            }
        } 
        catch (Exception e) 
        {
            JOptionPane.showMessageDialog(null, e);
        }       
        
        tbEvaluaciones.getColumnModel().getColumn(0).setMinWidth(0);
        tbEvaluaciones.getColumnModel().getColumn(0).setMaxWidth(0);
        tbEvaluaciones.getColumnModel().getColumn(1).setMinWidth(0);
        tbEvaluaciones.getColumnModel().getColumn(1).setMaxWidth(0);
    }
    
    private void agregarEvaluacion()
    {
                
        if (txtDescripcion.getText().isEmpty() || txtNumeroEvaluacion.getText().isEmpty() || cmbDocente.getSelectedIndex() == -1) 
        {
            
            JOptionPane.showMessageDialog(this, "No dejar campos vacios", "Advertencia",JOptionPane.WARNING_MESSAGE);
            
        }
        else
        {
            
            // Obtener el id del grado seleccionado en el comboBox
            int idDocente = funciones.getIdPersona(cmbDocente.getItemAt(cmbDocente.getSelectedIndex()));
            controlador_evaluacion.setCodigoDocente(idDocente);
            
            System.out.print(idDocente);
            
            controlador_evaluacion.setNumeroEvaluacion(Integer.parseInt(txtNumeroEvaluacion.getText()));
            controlador_evaluacion.setDescripcion(txtDescripcion.getText());
            controlador_evaluacion.setPorcentajeEvaluacion(Double.parseDouble(txtPorcentaje.getText()));
            funciones.agregarEvaluacion(controlador_evaluacion);
            btnActualizar.setEnabled(false);
            btnEliminar.setEnabled(false);
            
        }
    }
    
    private void actualizarEvaluacion()
    {
        if (txtDescripcion.getText().isEmpty() || txtNumeroEvaluacion.getText().isEmpty() || cmbDocente.getSelectedIndex() == -1) 
        {
            
            JOptionPane.showMessageDialog(this, "No dejar campos vacios", "Advertencia",JOptionPane.WARNING_MESSAGE);
            
        }
        else
        {
            int fila = tbEvaluaciones.getSelectedRow();
            int idEvaluacion = Integer.parseInt(tbEvaluaciones.getValueAt(fila, 0).toString());
            controlador_evaluacion.setCodigoEvaluacion(idEvaluacion);
            int idDocente = funciones.getIdPersona(cmbDocente.getSelectedItem().toString());
            controlador_evaluacion.setCodigoDocente(idDocente);
            System.out.print(idDocente);
            controlador_evaluacion.setNumeroEvaluacion(Integer.parseInt(txtNumeroEvaluacion.getText()));
            controlador_evaluacion.setDescripcion(txtDescripcion.getText());
            funciones.actualizarEvaluacion(controlador_evaluacion);
            
        }
    }
    
    private void eliminarEvaluacion()
    {
        int respuesta = JOptionPane.showConfirmDialog(this, "¿Estás seguro que quieres eliminar esta evaluación?", "Eliminar registro", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (respuesta == JOptionPane.YES_OPTION) 
        {
            int fila = tbEvaluaciones.getSelectedRow();
            int idEvaluacion = Integer.parseInt(tbEvaluaciones.getValueAt(fila, 0).toString());
            controlador_evaluacion.setCodigoEvaluacion(idEvaluacion);
            funciones.eliminarEvaluacion(controlador_evaluacion);

        }
    } 
    
    private void limpiarCampos()
    {
        txtNumeroEvaluacion.setText("");        
        txtDescripcion.setText("");
    }
    
    
    protected boolean validarNumeros(char letra){
        return Character.isLetter(letra);
    }
      

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JComboBox<String> cmbDocente;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCodigoEstudiante1;
    private javax.swing.JLabel lblCorreoEstu1;
    private javax.swing.JLabel lblNombresEstudiante1;
    private javax.swing.JLabel lblTelefonoEstudiante1;
    private javax.swing.JTable tbEvaluaciones;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtNumeroEvaluacion;
    private javax.swing.JTextField txtPorcentaje;
    // End of variables declaration//GEN-END:variables
}
